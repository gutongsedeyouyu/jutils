package com.jutils.arrays.sorting;

import java.util.Comparator;

/**
 * Popular comparison-based sorting algorithms.
 *
 * -----------------------------------------------------------------------------------------------------------------
 * |  Name            |  Time Complexity  |  Memory Complexity  |  Stable  |  Notes                                |
 * |------------------+-------------------+---------------------+----------+---------------------------------------|
 * |  Bubble Sort     |  O(n ** 2)        |  O(1)               |  Yes     |  Simple to understand and implement.  |
 * |------------------+-------------------+---------------------+----------+---------------------------------------|
 * |  Selection Sort  |  O(n ** 2)        |  O(1)               |  No      |  Few memory writes.                   |
 * |------------------+-------------------+---------------------+----------+---------------------------------------|
 * |  Insertion Sort  |  O(n ** 2)        |  O(1)               |  Yes     |  Fast when n is small.                |
 * |------------------+-------------------+---------------------+----------+---------------------------------------|
 * |  Heapsort        |  O(n log n)       |  O(1)               |  No      |  Low memory cost.                     |
 * |------------------+-------------------+---------------------+----------+---------------------------------------|
 * |  Quicksort       |  O(n log n)       |  O(log n)           |  No      |  Fastest O(n log n) sort in general.  |
 * |------------------+-------------------+---------------------+----------+---------------------------------------|
 * |  Merge Sort      |  O(n log n)       |  O(n)               |  Yes     |  Stable O(n log n) sort.              |
 * -----------------------------------------------------------------------------------------------------------------
 *
 */
public interface Sort<T> {
    void sort(T[] items, Comparator<T> comparator);
}
